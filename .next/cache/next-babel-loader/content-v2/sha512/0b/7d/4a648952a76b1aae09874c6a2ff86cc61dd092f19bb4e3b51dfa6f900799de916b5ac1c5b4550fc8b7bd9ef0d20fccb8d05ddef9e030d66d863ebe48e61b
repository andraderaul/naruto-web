{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useReducer, useCallback } from 'react';\nexport let RequestStatus;\n\n(function (RequestStatus) {\n  RequestStatus[\"IDLE\"] = \"idle\";\n  RequestStatus[\"PENDING\"] = \"pending\";\n  RequestStatus[\"RESOLVED\"] = \"resolved\";\n  RequestStatus[\"REJECTED\"] = \"rejected\";\n})(RequestStatus || (RequestStatus = {}));\n\nexport const asyncReduce = (state, action) => {\n  switch (action.type) {\n    case RequestStatus.PENDING:\n      return {\n        status: RequestStatus.PENDING,\n        data: null,\n        error: null\n      };\n\n    case RequestStatus.RESOLVED:\n      return {\n        status: RequestStatus.RESOLVED,\n        data: action.payload,\n        error: null\n      };\n\n    case RequestStatus.REJECTED:\n      return {\n        status: RequestStatus.REJECTED,\n        data: null,\n        error: action.error\n      };\n\n    default:\n      throw Error(`Unhandled action: ${action.type}`);\n  }\n};\n\nconst useAsync = initialState => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(asyncReduce, _objectSpread({\n    status: RequestStatus.IDLE,\n    data: null,\n    error: null\n  }, initialState));\n  const runPromise = useCallback(promise => {\n    dispatch({\n      type: RequestStatus.PENDING\n    });\n    promise.then(data => dispatch({\n      type: RequestStatus.RESOLVED,\n      payload: data\n    }), error => dispatch({\n      type: RequestStatus.REJECTED,\n      error\n    }));\n  }, []);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    runPromise\n  });\n};\n\nexport default useAsync;","map":{"version":3,"sources":["/home/howl/Área de Trabalho/my-projects/naruto/naruto-web/hooks/useAsync.ts"],"names":["useReducer","useCallback","RequestStatus","asyncReduce","state","action","type","PENDING","status","data","error","RESOLVED","payload","REJECTED","Error","useAsync","initialState","dispatch","IDLE","runPromise","promise","then"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,OAAxC;AAOA,WAAYC,aAAZ;;WAAYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a;;AAmBZ,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAgBC,MAAhB,KAA4C;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,aAAa,CAACK,OAAnB;AACE,aAAO;AACLC,QAAAA,MAAM,EAAEN,aAAa,CAACK,OADjB;AAELE,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAMF,SAAKR,aAAa,CAACS,QAAnB;AACE,aAAO;AACLH,QAAAA,MAAM,EAAEN,aAAa,CAACS,QADjB;AAELF,QAAAA,IAAI,EAAEJ,MAAM,CAACO,OAFR;AAGLF,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKR,aAAa,CAACW,QAAnB;AACE,aAAO;AACLL,QAAAA,MAAM,EAAEN,aAAa,CAACW,QADjB;AAELJ,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAEL,MAAM,CAACK;AAHT,OAAP;;AAKF;AACE,YAAMI,KAAK,CAAE,qBAAoBT,MAAM,CAACC,IAAK,EAAlC,CAAX;AArBJ;AAuBD,CAxBM;;AA0BP,MAAMS,QAAQ,GAAIC,YAAD,IAA0B;AACzC,QAAM;AAAA,OAACZ,KAAD;AAAA,OAAQa;AAAR,MAAoBjB,UAAU,CAACG,WAAD;AAClCK,IAAAA,MAAM,EAAEN,aAAa,CAACgB,IADY;AAElCT,IAAAA,IAAI,EAAE,IAF4B;AAGlCC,IAAAA,KAAK,EAAE;AAH2B,KAI/BM,YAJ+B,EAApC;AAOA,QAAMG,UAAU,GAAGlB,WAAW,CAAEmB,OAAD,IAAa;AAC1CH,IAAAA,QAAQ,CAAC;AAAEX,MAAAA,IAAI,EAAEJ,aAAa,CAACK;AAAtB,KAAD,CAAR;AACAa,IAAAA,OAAO,CAACC,IAAR,CACGZ,IAAD,IACEQ,QAAQ,CAAC;AAAEX,MAAAA,IAAI,EAAEJ,aAAa,CAACS,QAAtB;AAAgCC,MAAAA,OAAO,EAAEH;AAAzC,KAAD,CAFZ,EAGGC,KAAD,IAAmBO,QAAQ,CAAC;AAAEX,MAAAA,IAAI,EAAEJ,aAAa,CAACW,QAAtB;AAAgCH,MAAAA;AAAhC,KAAD,CAH7B;AAKD,GAP6B,EAO3B,EAP2B,CAA9B;AASA,yCAAYN,KAAZ;AAAmBe,IAAAA;AAAnB;AACD,CAlBD;;AAoBA,eAAeJ,QAAf","sourcesContent":["import { useReducer, useCallback } from 'react';\nimport { AxiosError } from 'axios';\nimport ICharacter from '../interfaces/character';\n\ntype TData = ICharacter[] | null;\ntype TError = AxiosError | null;\n\nexport enum RequestStatus {\n  IDLE = 'idle',\n  PENDING = 'pending',\n  RESOLVED = 'resolved',\n  REJECTED = 'rejected',\n}\n\ninterface IAction {\n  type?: string;\n  payload?: TData;\n  error?: TError;\n}\n\ninterface IState {\n  status?: string;\n  data?: TData;\n  error?: TError;\n}\n\nexport const asyncReduce = (state: IState, action: IAction): IState => {\n  switch (action.type) {\n    case RequestStatus.PENDING:\n      return {\n        status: RequestStatus.PENDING,\n        data: null,\n        error: null,\n      };\n\n    case RequestStatus.RESOLVED:\n      return {\n        status: RequestStatus.RESOLVED,\n        data: action.payload,\n        error: null,\n      };\n    case RequestStatus.REJECTED:\n      return {\n        status: RequestStatus.REJECTED,\n        data: null,\n        error: action.error,\n      };\n    default:\n      throw Error(`Unhandled action: ${action.type}`);\n  }\n};\n\nconst useAsync = (initialState: IState) => {\n  const [state, dispatch] = useReducer(asyncReduce, {\n    status: RequestStatus.IDLE,\n    data: null,\n    error: null,\n    ...initialState,\n  });\n\n  const runPromise = useCallback((promise) => {\n    dispatch({ type: RequestStatus.PENDING });\n    promise.then(\n      (data: TData) =>\n        dispatch({ type: RequestStatus.RESOLVED, payload: data }),\n      (error: TError) => dispatch({ type: RequestStatus.REJECTED, error }),\n    );\n  }, []);\n\n  return { ...state, runPromise };\n};\n\nexport default useAsync;\n"]},"metadata":{},"sourceType":"module"}