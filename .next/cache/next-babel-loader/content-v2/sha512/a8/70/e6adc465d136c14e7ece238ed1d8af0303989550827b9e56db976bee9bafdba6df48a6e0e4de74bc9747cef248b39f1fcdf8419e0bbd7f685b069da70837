{"ast":null,"code":"import api from '../services/api';\nimport { GET } from '../constants/verbs';\nimport { CHARACTERS, CHARACTERS_BY_ID } from '../constants/endpoints';\nexport async function getCharacters() {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api({\n      method: GET,\n      url: CHARACTERS\n    });\n    return data;\n  } catch (error) {\n    return [];\n  }\n}\nexport async function getCharactersByParams(params, letter) {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api({\n      method: GET,\n      url: `${CHARACTERS}?${params}=${letter}`\n    });\n    return data;\n  } catch (error) {\n    //TODO: throw error\n    if (error.code === 'ECONNREFUSED') {\n      console.error('Server is down');\n    } else {\n      console.error(error);\n      throw error;\n    }\n\n    return [];\n  }\n}\nexport async function getCharacterById(id) {\n  try {\n    const {\n      data\n    } = await api({\n      method: GET,\n      url: CHARACTERS_BY_ID(id)\n    });\n    return data;\n  } catch (error) {\n    //TODO: throw error\n    console.log(error);\n    return null;\n  }\n}","map":{"version":3,"sources":["/home/howl/√Årea de Trabalho/my-projects/naruto/naruto-web/lib/characters.ts"],"names":["api","GET","CHARACTERS","CHARACTERS_BY_ID","getCharacters","data","method","url","error","getCharactersByParams","params","letter","code","console","getCharacterById","id","log"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AAEA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,wBAA7C;AAEA,OAAO,eAAeC,aAAf,GAAsD;AAC3D,MAAI;AACF,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AADF,QAEF,MAAML,GAAG,CAAC;AACZM,MAAAA,MAAM,EAAEL,GADI;AAEZM,MAAAA,GAAG,EAAEL;AAFO,KAAD,CAFb;AAMA,WAAOG,IAAP;AACD,GARD,CAQE,OAAOG,KAAP,EAAc;AACd,WAAO,EAAP;AACD;AACF;AAED,OAAO,eAAeC,qBAAf,CACLC,MADK,EAELC,MAFK,EAGkB;AACvB,MAAI;AACF,UAAM;AACJN,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AADF,QAEF,MAAML,GAAG,CAAC;AACZM,MAAAA,MAAM,EAAEL,GADI;AAEZM,MAAAA,GAAG,EAAG,GAAEL,UAAW,IAAGQ,MAAO,IAAGC,MAAO;AAF3B,KAAD,CAFb;AAOA,WAAON,IAAP;AACD,GATD,CASE,OAAOG,KAAP,EAAc;AACd;AACA,QAAIA,KAAK,CAACI,IAAN,KAAe,cAAnB,EAAmC;AACjCC,MAAAA,OAAO,CAACL,KAAR,CAAc,gBAAd;AACD,KAFD,MAEO;AACLK,MAAAA,OAAO,CAACL,KAAR,CAAcA,KAAd;AACA,YAAMA,KAAN;AACD;;AACD,WAAO,EAAP;AACD;AACF;AAED,OAAO,eAAeM,gBAAf,CAAgCC,EAAhC,EAAwE;AAC7E,MAAI;AACF,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAML,GAAG,CAAC;AACzBM,MAAAA,MAAM,EAAEL,GADiB;AAEzBM,MAAAA,GAAG,EAAEJ,gBAAgB,CAACY,EAAD;AAFI,KAAD,CAA1B;AAIA,WAAOV,IAAP;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACd;AACAK,IAAAA,OAAO,CAACG,GAAR,CAAYR,KAAZ;AACA,WAAO,IAAP;AACD;AACF","sourcesContent":["import api from '../services/api';\nimport ICharacter from '../interfaces/character';\nimport { GET } from '../constants/verbs';\nimport { CHARACTERS, CHARACTERS_BY_ID } from '../constants/endpoints';\n\nexport async function getCharacters(): Promise<ICharacter[]> {\n  try {\n    const {\n      data: { data },\n    } = await api({\n      method: GET,\n      url: CHARACTERS,\n    });\n    return data;\n  } catch (error) {\n    return [];\n  }\n}\n\nexport async function getCharactersByParams(\n  params: string,\n  letter: string,\n): Promise<ICharacter[]> {\n  try {\n    const {\n      data: { data },\n    } = await api({\n      method: GET,\n      url: `${CHARACTERS}?${params}=${letter}`,\n    });\n\n    return data;\n  } catch (error) {\n    //TODO: throw error\n    if (error.code === 'ECONNREFUSED') {\n      console.error('Server is down');\n    } else {\n      console.error(error);\n      throw error;\n    }\n    return [];\n  }\n}\n\nexport async function getCharacterById(id: string): Promise<ICharacter | null> {\n  try {\n    const { data } = await api({\n      method: GET,\n      url: CHARACTERS_BY_ID(id),\n    });\n    return data;\n  } catch (error) {\n    //TODO: throw error\n    console.log(error);\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}