{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/howl/\\xC1rea de Trabalho/my-projects/naruto/naruto-web/components/Alphabet/Alphabet.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { alphabet } from '../../constants';\nimport { useRouter } from 'next/router';\nimport * as S from './Alphabet.styles';\n\nvar Alphabet = function Alphabet(_ref) {\n  _s();\n\n  var letter = _ref.letter,\n      setLetter = _ref.setLetter,\n      pathname = _ref.pathname;\n  var router = useRouter();\n\n  var handleOnClick = function handleOnClick(alpha) {\n    return function () {\n      setLetter(alpha);\n      router.push({\n        pathname: pathname,\n        query: {\n          from: alpha\n        }\n      });\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(S.Alphabet, {\n    children: alphabet.map(function (alpha) {\n      return /*#__PURE__*/_jsxDEV(S.Span, {\n        active: letter === alpha,\n        onClick: handleOnClick(alpha),\n        children: alpha\n      }, alpha, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Alphabet, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Alphabet;\nexport default Alphabet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alphabet\");","map":{"version":3,"sources":["/home/howl/√Årea de Trabalho/my-projects/naruto/naruto-web/components/Alphabet/Alphabet.tsx"],"names":["alphabet","useRouter","S","Alphabet","letter","setLetter","pathname","router","handleOnClick","alpha","push","query","from","map"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,KAAKC,CAAZ,MAAmB,mBAAnB;;AAQA,IAAMC,QAAkC,GAAG,SAArCA,QAAqC,OAIrB;AAAA;;AAAA,MAHpBC,MAGoB,QAHpBA,MAGoB;AAAA,MAFpBC,SAEoB,QAFpBA,SAEoB;AAAA,MADpBC,QACoB,QADpBA,QACoB;AACpB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;;AAEA,MAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,WAAmB,YAAM;AAC7CJ,MAAAA,SAAS,CAACI,KAAD,CAAT;AACAF,MAAAA,MAAM,CAACG,IAAP,CAAY;AACVJ,QAAAA,QAAQ,EAARA,QADU;AAEVK,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAEH;AADD;AAFG,OAAZ;AAMD,KARqB;AAAA,GAAtB;;AAUA,sBACE,QAAC,CAAD,CAAG,QAAH;AAAA,cACGT,QAAQ,CAACa,GAAT,CAAa,UAACJ,KAAD;AAAA,0BACZ,QAAC,CAAD,CAAG,IAAH;AACE,QAAA,MAAM,EAAEL,MAAM,KAAKK,KADrB;AAGE,QAAA,OAAO,EAAED,aAAa,CAACC,KAAD,CAHxB;AAAA,kBAKGA;AALH,SAEOA,KAFP;AAAA;AAAA;AAAA;AAAA,eADY;AAAA,KAAb;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAaD,CA9BD;;GAAMN,Q;UAKWF,S;;;KALXE,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import { alphabet } from '../../constants';\nimport { useRouter } from 'next/router';\nimport { CHARACTERS } from '../../constants/endpoints';\nimport * as S from './Alphabet.styles';\n\ninterface IPropsAlphabet {\n  letter: string;\n  pathname: string;\n  setLetter: Function;\n}\n\nconst Alphabet: React.FC<IPropsAlphabet> = ({\n  letter,\n  setLetter,\n  pathname,\n}: IPropsAlphabet) => {\n  const router = useRouter();\n\n  const handleOnClick = (alpha: string) => () => {\n    setLetter(alpha);\n    router.push({\n      pathname,\n      query: {\n        from: alpha,\n      },\n    });\n  };\n\n  return (\n    <S.Alphabet>\n      {alphabet.map((alpha) => (\n        <S.Span\n          active={letter === alpha}\n          key={alpha}\n          onClick={handleOnClick(alpha)}\n        >\n          {alpha}\n        </S.Span>\n      ))}\n    </S.Alphabet>\n  );\n};\n\nexport default Alphabet;\n"]},"metadata":{},"sourceType":"module"}